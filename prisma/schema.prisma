generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project     project[]
  team        team[]
}

model project {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @db.VarChar(255)
  start_date DateTime  @db.Timestamp(6)
  end_date   DateTime? @db.Timestamp(6)
  status     String    @db.VarChar(255)
  company_id String    @db.Uuid
  manager_id String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  company    company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user      @relation(fields: [manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ticket     ticket[]
}

model team {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  company_id  String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  company     company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ticket {
  id                            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                         String       @db.VarChar(255)
  description                   String?      @db.VarChar(255)
  status                        String       @db.VarChar(255)
  priority                      String       @db.VarChar(255)
  project_id                    String       @db.Uuid
  creator_id                    String       @db.Uuid
  assignee_id                   String       @db.Uuid
  created_at                    DateTime     @default(now()) @db.Timestamp(6)
  updated_at                    DateTime     @default(now()) @db.Timestamp(6)
  user_ticket_assignee_idTouser user         @relation("ticket_assignee_idTouser", fields: [assignee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_ticket_creator_idTouser  user         @relation("ticket_creator_idTouser", fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project                       project      @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  time_entry                    time_entry[]
}

model time_entry {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time  DateTime  @db.Timestamp(6)
  end_time    DateTime? @db.Timestamp(6)
  description String?   @db.VarChar(255)
  ticket_id   String    @db.Uuid
  user_id     String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  ticket      ticket    @relation(fields: [ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                           String       @unique @db.VarChar(255)
  firstName                       String?      @db.VarChar(255)
  lastName                        String?      @db.VarChar(255)
  roq_user_id                     String       @db.VarChar(255)
  tenant_id                       String       @db.VarChar(255)
  created_at                      DateTime     @default(now()) @db.Timestamp(6)
  updated_at                      DateTime     @default(now()) @db.Timestamp(6)
  company                         company[]
  project                         project[]
  ticket_ticket_assignee_idTouser ticket[]     @relation("ticket_assignee_idTouser")
  ticket_ticket_creator_idTouser  ticket[]     @relation("ticket_creator_idTouser")
  time_entry                      time_entry[]
}
